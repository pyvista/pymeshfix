name: Unit Testing
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true

on:
  push:
    branches: "*"
    tags: "*"
  pull_request:
    branches: "**"

jobs:
  macOS:
    runs-on: ${{ matrix.os }}
    name: Mac OS Unit Testing
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
        os: ['macos-11']
        exclude:
          - python-version: '3.10'
            os: macos-11
        include:
          - python-version: '3.10'
            os: macos-12

    env:
      SHELLOPTS: 'errexit:pipefail'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup dependencies
        run: |
          pip install -r requirements_build.txt --only-binary="numpy" --find-links https://wheels.pyvista.org/

      - name: Build wheel
        run: |
          python setup.py bdist_wheel

      - name: Upgrade pip on 3.10 so that wheels can be found
        run: |
          pip install --upgrade pip
          pip debug --verbose
          pip debug --verbose | grep 310-macosx_12_0
        if: ${{ matrix.os == 'macos-12' }}

      - name: Install vtk
        run: |
          pip install --find-links https://wheels.pyvista.org/ vtk -vvv

      - name: Install wheel
        run: |
          pip install dist/*

      - name: Check package
        run: |
          python -c "import pyvista; print(pyvista.Report(gpu=False))"

      - name: Install test dependencies
        run: |
          pip install -r requirements_test.txt

      - name: Unit testing
        run: |
          pytest -v

      - name: Validate package
        run: |
          pip install twine
          twine check dist/*

      - name: Upload to PyPi
        if: startsWith(github.event.ref, 'refs/tags')
        run: |
          twine upload -u __token__ --skip-existing dist/*
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
